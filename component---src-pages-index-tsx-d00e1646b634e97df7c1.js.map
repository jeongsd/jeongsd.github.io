{"version":3,"sources":["webpack:///./src/components/PinnedExperienceList.tsx","webpack:///./src/components/CommercialToolkitsList.tsx","webpack:///./src/pages/index.tsx"],"names":["Item","styled","div","withConfig","displayName","componentId","PinnedExperienceList","data","_3335024392","experiences","oc","edges","react_default","a","createElement","className","map","_ref","node","key","id","href","url","title","desc","index_esm","icon","Location","location","Calendar","ariaLabel","startedAt","Root","LinkWrapper","span","Content","Desc","p","CommercialToolkitsList","_2256129672","commercialToolkits","learnedAt","DateTime","fromISO","CommercialToolkitsList_Item","index_umd_default","action","placement","undefined","alt","name","src","logo","publicURL","width","height","name_detail","isValid","toFormat","__webpack_require__","d","__webpack_exports__","query","Main","Index","useSpring","config","slow","from","opacity","to","components_CommercialToolkitsList","role","components_PinnedExperienceList"],"mappings":"kKAeMA,EAAOC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,eAAGJ,CAAH,eA2CKK,EAvCyB,WACtC,IAAMC,EAAkCC,EAAAD,KAClCE,EAAcC,aAAGH,GAAME,YAAYE,MAAM,IAE/C,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACZN,EAAYO,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAClB,OAAKA,EAEHN,EAAAC,EAAAC,cAACd,EAAD,CAAMmB,IAAKD,EAAKE,GAAIL,UAAU,mDAC5BH,EAAAC,EAAAC,cAAA,KAAGO,KAAMH,EAAKI,IAAKP,UAAU,uBAC3BH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAwBQ,MAAM,yBAC3CL,EAAKK,QAGVX,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0CACZG,EAAKM,MAENZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAASV,UAAU,YAAYW,KAAMC,MACrCf,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBACdG,EAAKU,WAGVhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAASC,KAAMG,IAAUC,UAAU,iBACnClB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACdG,EAAKa,cArBE,sDCVpBC,EAAO/B,IAAOC,IAAVC,WAAA,CAAAC,YAAA,+BAAAC,YAAA,YAAGJ,CAAH,kCAIJgC,EAAchC,IAAOiC,KAAV/B,WAAA,CAAAC,YAAA,sCAAAC,YAAA,YAAGJ,CAAH,6BAKXkC,EAAUlC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,kCAAAC,YAAA,YAAGJ,CAAH,iCAIPD,EAAOC,IAAOiC,KAAV/B,WAAA,CAAAC,YAAA,+BAAAC,YAAA,YAAGJ,CAAH,wCAIJmC,EAAOnC,IAAOoC,EAAVlC,WAAA,CAAAC,YAAA,+BAAAC,YAAA,YAAGJ,CAAH,2BA4EKqC,EAxE2B,WACxC,IAAM/B,EAAoCgC,EAAAhC,KACpCiC,EAAqB9B,aAAGH,GAAMiC,mBAAmB7B,MAAM,IAE7D,OACEC,EAAAC,EAAAC,cAACkB,EAAD,KACGQ,EAAmBxB,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACzB,IAAKA,EAAM,OAAO,KAElB,IAAMuB,EAAYC,WAASC,QAAQzB,EAAKuB,WAExC,OACE7B,EAAAC,EAAAC,cAAC8B,EAAD,CAAMzB,IAAKD,EAAKE,IACdR,EAAAC,EAAAC,cAAC+B,EAAAhC,EAAD,CAASiC,OAAO,QAAQC,UAAU,OAChCnC,EAAAC,EAAAC,cAACmB,EAAD,KACErB,EAAAC,EAAAC,cAAA,KAAGO,KAAMH,EAAKI,UAAO0B,GACnBpC,EAAAC,EAAAC,cAAA,OACEC,UAAU,SACVkC,IAAK/B,EAAKgC,MAAQ,GAClBC,IAAKjC,EAAKkC,MAAQlC,EAAKkC,KAAKC,WAAa,GACzCC,MAAM,KACNC,OAAO,SAIb3C,EAAAC,EAAAC,cAACqB,EAAD,KACEvB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACbH,EAAAC,EAAAC,cAAA,OACEC,UAAU,SACVkC,IAAK/B,EAAKgC,MAAQ,GAClBC,IAAKjC,EAAKkC,MAAQlC,EAAKkC,KAAKC,WAAa,GACzCC,MAAM,KACNC,OAAO,QAGX3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,SAAII,EAAKgC,MACR,MACDtC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACbG,EAAKsC,cAGV5C,EAAAC,EAAAC,cAACsB,EAAD,CAAMrB,UAAU,aACbG,EAAKM,QAIZZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CAIbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACbH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAASC,KAAMG,IAAUC,UAAU,iBACnClB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACd0B,EAAUgB,QAAUhB,EAAUiB,SAAS,WAAa,kBC9F7EC,EAAAC,EAAAC,EAAA,0BAAAC,IAgBA,IAAMC,EAAO9D,IAAOC,IAAVC,WAAA,CAAAC,YAAA,cAAAC,YAAA,eAAGJ,CAAH,2DAiEG6D,GAFEE,UAxDmC,SAAA/C,GAAcA,EAAXV,KAC7B0D,YAAU,CAC9BC,OAAQA,IAAOC,KACfC,KAAM,CAAEC,QAAS,GACjBC,GAAI,CAAED,QAAS,KAGjB,OACEzD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oCAChBH,EAAAC,EAAAC,cAACiD,EAAD,CAAMhD,UAAU,QACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BAAd,6CAKJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BAAd,mBAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,oCAKFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAd,sBAGAH,EAAAC,EAAAC,cAACyD,EAAD,QAGJ3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,KAAGO,KAAK,IAAImD,KAAK,MAAMjD,MAAM,SAASR,UAAU,8BAAhD,YACAH,EAAAC,EAAAC,cAAA,KAAGO,KAAK,eAAemD,KAAK,MAAMjD,MAAM,SAASR,UAAU,qBAA3D,iBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAd,sBAGAH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2D,EAAD,YAYI","file":"component---src-pages-index-tsx-d00e1646b634e97df7c1.js","sourcesContent":["import React from 'react'\nimport { DateTime } from 'luxon'\nimport Img from 'gatsby-image'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { oc } from 'ts-optchain'\nimport styled from 'styled-components'\nimport Octicon, { Location, Calendar } from '@githubprimer/octicons-react'\n\nimport { PinnedExperienceListQuery } from '../generated/graphql'\nimport { ChildImageSharp } from '../types'\n\n// type PageProps = {\n//   data: IndexQuery\n// }\n\nconst Item = styled.div`\n  flex: 48%;\n`\n\nconst PinnedExperienceList: React.SFC = () => {\n  const data: PinnedExperienceListQuery = useStaticQuery(query)\n  const experiences = oc(data).experiences.edges([])\n\n  return (\n    <div className=\"d-flex flex-wrap \">\n      {experiences.map(({ node }) => {\n        if (!node) return null\n        return (\n          <Item key={node.id} className=\"p-3 mb-3 mr-2 border border-gray-dark rounded-1\">\n            <a href={node.url} className=\"text-bold flex-auto\">\n              <span className=\"repo js-pinnable-item\" title=\"react-timezone-map-gl\">\n                {node.title}\n              </span>\n            </a>\n            <p className=\"text-gray text-small d-block mt-2 mb-3\">\n            {node.desc}\n            </p>\n            <div className=\"d-flex flex-row flex-justify-start\">\n              <div className=\"mr-3\">\n                <Octicon className=\"ml-1 mr-2\" icon={Location}/>\n                <small className=\"f6 text-gray\">\n                  {node.location}\n                </small>\n              </div>\n              <div className=\"mr-3 d-flex flex-items-center\">\n                <Octicon icon={Calendar} ariaLabel=\"Add new item\" />\n                <small className=\"f6 text-gray ml-2\">\n                  {node.startedAt}\n                </small>\n              </div>\n            </div>\n          </Item>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default PinnedExperienceList\n\nexport const query = graphql`\n  query PinnedExperienceList {\n    experiences: allExperiencesYaml(filter: { pinned: { eq: true } }) {\n      edges {\n        node {\n          id\n          title\n          title_detail\n          category\n          desc\n          location\n          startedAt(formatString: \"YYYY.MM\")\n          url\n          pinned\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { DateTime } from 'luxon'\nimport Img from 'gatsby-image'\nimport { Manager, Reference, Popper } from 'react-popper';\nimport { oc } from 'ts-optchain'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport Popover from 'react-awesome-popover'\nimport Octicon, { Calendar } from '@githubprimer/octicons-react'\nimport { CommercialToolkitsListQuery } from '../generated/graphql'\nimport { ChildImageSharp } from '../types'\n\n// type PageProps = {\n//   data: IndexQuery\n// }\n\nconst Root = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\nconst LinkWrapper = styled.span`\n  /* max-width: 1012px; */\n  width: 32px;\n  height: 32px;\n`\nconst Content = styled.div`\n  max-width: 400px;\n  width: 100%;\n`\nconst Item = styled.span`\n  margin-right: 10px;\n  margin-top: 10px;\n`\nconst Desc = styled.p`\n  white-space: pre-line;\n`\n\nconst CommercialToolkitsList: React.SFC = () => {\n  const data: CommercialToolkitsListQuery = useStaticQuery(query)\n  const commercialToolkits = oc(data).commercialToolkits.edges([])\n\n  return (\n    <Root>\n      {commercialToolkits.map(({ node }) => {\n        if (!node) return null\n\n        const learnedAt = DateTime.fromISO(node.learnedAt)\n\n        return (\n          <Item key={node.id}>\n            <Popover action=\"hover\" placement=\"top\">\n              <LinkWrapper >\n                <a href={node.url || undefined}>\n                  <img\n                    className=\"avatar\"\n                    alt={node.name || ''}\n                    src={node.logo && node.logo.publicURL || ''}\n                    width=\"36\"\n                    height=\"36\"\n                  />\n                </a>\n              </LinkWrapper>\n              <Content>\n                <div>\n                  <div className=\"d-flex px-4 pt-3 pb-2\">\n                    <div className=\"\">\n                      <img\n                        className=\"avatar\"\n                        alt={node.name || ''}\n                        src={node.logo && node.logo.publicURL || ''}\n                        width=\"48\"\n                        height=\"48\"\n                      />\n                    </div>\n                    <div className=\"pl-4 m-0\">\n                      <p>\n                        <b>{node.name}</b>\n                        {' - '}\n                        <span className=\"text-gray\">\n                          {node.name_detail}\n                        </span>\n                      </p>\n                      <Desc className=\"text-gray\">\n                        {node.desc}\n                      </Desc>\n                    </div>\n                  </div>\n                  <div className=\"border-top border-gray-light px-4 pt-3 pb-2\">\n                    {/* <p className=\"text-gray\">\n                      {node.desc}\n                    </p> */}\n                    <div className=\"mr-3 d-flex flex-items-center\">\n                      <Octicon icon={Calendar} ariaLabel=\"Add new item\" />\n                      <small className=\"f6 text-gray ml-2\">\n                        {learnedAt.isValid ? learnedAt.toFormat('yyyy.MM') : '알수없음'}\n                      </small>\n                    </div>\n\n                  </div>\n                </div>\n              </Content>\n            </Popover>\n          </Item>\n        )\n      })}\n    </Root>\n  )\n}\n\nexport default CommercialToolkitsList\n\nexport const query = graphql`\n  query CommercialToolkitsList {\n    commercialToolkits: allCommercialToolkitsYaml {\n      edges {\n        node {\n          id\n          name\n          name_detail\n          url\n          logo {\n            id\n            relativePath\n            publicURL\n          }\n          learnedAt\n          endedAt\n          desc\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\nimport { animated, useSpring, config } from 'react-spring'\nimport Layout from '../components/layout'\nimport GridItem from '../components/grid-item'\nimport PinnedExperienceList from '../components/PinnedExperienceList'\nimport CommercialToolkitsList from '../components/CommercialToolkitsList'\nimport { IndexQuery } from '../generated/graphql'\nimport { ChildImageSharp } from '../types'\n\ntype PageProps = {\n  data: IndexQuery\n}\n\nconst Main = styled.div`\n  max-width: 1012px;\n  width: 100%;\n  margin: auto;\n  display: flex;\n`\n\nconst Index: React.FunctionComponent<PageProps> = ({ data }) => {\n  const pageAnimation = useSpring({\n    config: config.slow,\n    from: { opacity: 0 },\n    to: { opacity: 1 },\n  })\n\n  return (\n    <div>\n      <header className=\"bg-gray-dark text-white p-3 mb-2\">\n        <Main className=\"px-3\">\n          <h1 className=\"h4 f5 text-white text-bold\">\n            Jeong Seong Dae · Web Software Enginner\n          </h1>\n        </Main>\n      </header>\n      <div className=\"container-lg clearfix mt-4\">\n        <div className=\"h-card col-3 float-left pr-3\">\n          <div className=\"py-3\">\n            <h1 className=\"h2 d-block overflow-hidden\">\n              Jeong Seong Dae\n            </h1>\n            <h2 className=\"h3 f3-light text-gray\">\n              Full Stack Developer・JavaScript\n            </h2>\n          </div>\n\n          <div className=\"border-top border-gray-light py-3\">\n            <h2 className=\"mb-1 h4\">\n              Commercial Toolkit\n            </h2>\n            <CommercialToolkitsList />\n          </div>\n        </div>\n        <div className=\"col-9 float-left pl-2\">\n          <nav className=\"UnderlineNav\">\n            <div className=\"UnderlineNav-body\">\n              <a href=\"#\" role=\"tab\" title=\"Item 1\" className=\"UnderlineNav-item selected\">Overview</a>\n              <a href=\"#experiences\" role=\"tab\" title=\"Item 2\" className=\"UnderlineNav-item\">Experiences</a>\n            </div>\n          </nav>\n          <div className=\"mt-4\">\n            <h2 className=\"f4 mb-2 text-normal\">\n              Pinned Experiences\n            </h2>\n            <div>\n              <PinnedExperienceList />\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Index\n\nexport const query = graphql`\n  query Index {\n    commercialToolkits: allCommercialToolkitsYaml {\n      edges {\n        node {\n          id\n          name\n          name_detail\n          url\n          logo {\n            id\n            relativePath\n          }\n          learnedAt\n          endedAt\n          desc\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}