{"version":3,"sources":["webpack:///./src/components/PinnedExperienceList.tsx","webpack:///./src/components/Stack.tsx","webpack:///./src/components/CommercialToolkitsList.tsx","webpack:///./src/components/PreviousExperienceInList.tsx","webpack:///./src/components/Timeline/DateDivider.tsx","webpack:///./src/components/Timeline/VerticalDivider.tsx","webpack:///./src/components/Timeline/Timeline.tsx","webpack:///./src/components/DabbledWithList.tsx","webpack:///./src/pages/index.tsx"],"names":["Item","styled","div","withConfig","displayName","componentId","PinnedExperienceList","data","_3335024392","experiences","oc","edges","react_default","a","createElement","className","map","_ref","node","key","id","href","url","title","desc","index_esm","icon","Location","location","Calendar","ariaLabel","startedAt","LinkWrapper","span","Content","Desc","p","Logo","img","Stack","props","stack","learnedAt","DateTime","fromISO","Stack_Item","index_umd_default","action","placement","undefined","alt","name","src","logo","publicURL","width","height","name_detail","isValid","toFormat","Root","CommercialToolkitsList","_826083995","commercialToolkits","components_Stack","PreviousExperienceInList","_2115395847","preExperiences","PreviousExperienceInList_Root","HorizontalDivider","DateDivider","date","console","log","dist_index_esm","flexWrap","alignItems","year","flex","Circle","Divider","TopDivider","BottomDivider","VerticalDivider","VerticalDivider_Root","size","color","ExperienceListItem","Timeline","_2685693815","groupByTimes","_","groupBy","Timeline_Root","groupByTime","Fragment","Timeline_DateDivider","fromFormat","experience","Timeline_VerticalDivider","Organization","DabbledWithList","_395140792","dabbledWiths","DabbledWithList_Root","Main","Index","useSpring","config","slow","from","opacity","to","ml","mr","Mail","Link","rel","components_CommercialToolkitsList","components_PreviousExperienceInList","components_DabbledWithList","role","components_PinnedExperienceList","components_Timeline_Timeline"],"mappings":"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","file":"component---src-pages-index-tsx-6c84ad9048757c926c7e.js","sourcesContent":["import React from 'react'\nimport { DateTime } from 'luxon'\nimport Img from 'gatsby-image'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { oc } from 'ts-optchain'\nimport styled from 'styled-components'\nimport Octicon, { Location, Calendar } from '@githubprimer/octicons-react'\nimport { PinnedExperienceListQuery } from '../generated/graphql'\nimport { ChildImageSharp } from '../types'\n\n// type PageProps = {\n//   data: IndexQuery\n// }\n\nconst Item = styled.div`\n  flex: 48%;\n`\n\nconst PinnedExperienceList: React.SFC = () => {\n  const data: PinnedExperienceListQuery = useStaticQuery(query)\n  const experiences = oc(data).experiences.edges([])\n\n  return (\n    <div className=\"d-flex flex-wrap \">\n      {experiences.map(({ node }) => {\n        if (!node) return null\n        return (\n          <Item key={node.id} className=\"p-3 mb-3 mr-2 border border-gray-dark rounded-1\">\n            <a href={node.url} className=\"text-bold flex-auto\">\n              <span className=\"repo js-pinnable-item\" title=\"react-timezone-map-gl\">\n                {node.title}\n              </span>\n            </a>\n            <p className=\"text-gray text-small d-block mt-2 mb-3\">\n            {node.desc}\n            </p>\n            <div className=\"d-flex flex-row flex-justify-start\">\n              <div className=\"mr-3\">\n                <Octicon className=\"ml-1 mr-2\" icon={Location}/>\n                <small className=\"f6 text-gray\">\n                  {node.location}\n                </small>\n              </div>\n              <div className=\"mr-3 d-flex flex-items-center\">\n                <Octicon icon={Calendar} ariaLabel=\"Add new item\" />\n                <small className=\"f6 text-gray ml-2\">\n                  {node.startedAt}\n                </small>\n              </div>\n            </div>\n          </Item>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default PinnedExperienceList\n\nexport const query = graphql`\n  query PinnedExperienceList {\n    experiences: allExperiencesYaml(filter: { pinned: { eq: true } }) {\n      edges {\n        node {\n          id\n          title\n          title_detail\n          category\n          desc\n          location\n          startedAt(formatString: \"YYYY.MM\")\n          url\n          pinned\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { DateTime } from 'luxon'\nimport styled from 'styled-components'\nimport { graphql } from 'gatsby'\nimport Popover from 'react-awesome-popover'\nimport Octicon, { Calendar } from '@githubprimer/octicons-react'\nimport {\n  Stack_StackFragment\n} from '../generated/graphql'\n\n// type PageProps = {\n//   data: IndexQuery\n// }\n\nconst LinkWrapper = styled.span`\n  /* max-width: 1012px; */\n  width: 32px;\n  height: 32px;\n`\nconst Content = styled.div`\n  max-width: 400px;\n  width: 100%;\n`\nconst Item = styled.span`\n  margin-right: 10px;\n  margin-top: 10px;\n`\nconst Desc = styled.p`\n  white-space: pre-line;\n`\nconst Logo = styled.img`\n  object-fit: contain;\n`\n\nexport type StackProps = {\n  stack: Stack_StackFragment\n}\nconst Stack: React.SFC<StackProps> = (props) => {\n  const { stack } = props\n  const learnedAt = DateTime.fromISO(stack.learnedAt)\n\n  return (\n    <Item key={stack.id}>\n      <Popover action=\"hover\" placement=\"top\">\n        <LinkWrapper >\n          <a href={stack.url || undefined}>\n            <Logo\n              className=\"avatar\"\n              alt={stack.name || ''}\n              src={stack.logo && stack.logo.publicURL || ''}\n              width=\"36\"\n              height=\"36\"\n            />\n          </a>\n        </LinkWrapper>\n        <Content>\n          <div>\n            <div className=\"d-flex px-4 pt-3 pb-2\">\n              <div className=\"\">\n                <Logo\n                  className=\"avatar\"\n                  alt={stack.name || ''}\n                  src={stack.logo && stack.logo.publicURL || ''}\n                  width=\"48\"\n                  height=\"48\"\n                />\n              </div>\n              <div className=\"pl-4 m-0\">\n                <p>\n                  <b>{stack.name}</b>\n                  {' - '}\n                  <span className=\"text-gray\">\n                    {stack.name_detail}\n                  </span>\n                </p>\n                <Desc className=\"text-gray\">\n                  {stack.desc}\n                </Desc>\n              </div>\n            </div>\n            <div className=\"border-top border-gray-light px-4 pt-3 pb-2\">\n              <div className=\"mr-3 d-flex flex-items-center\">\n                <Octicon icon={Calendar} ariaLabel=\"Add new item\" />\n                <small className=\"f6 text-gray ml-2\">\n                  {learnedAt.isValid ? learnedAt.toFormat('yyyy.MM') : '알수없음'}\n                </small>\n              </div>\n            </div>\n          </div>\n        </Content>\n      </Popover>\n    </Item>\n  )\n}\n\nexport default Stack\n\nexport const query = graphql`\n  fragment Stack_Stack on StacksYaml {\n    id\n    name\n    name_detail\n    url\n    logo {\n      publicURL\n    }\n    learnedAt\n    endedAt\n    desc\n  }\n`\n","import React from 'react'\nimport { oc } from 'ts-optchain'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { CommercialToolkitsListQuery } from '../generated/graphql'\nimport Stack from './Stack'\n\nconst Root = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\n\nconst CommercialToolkitsList: React.SFC = () => {\n  const data: CommercialToolkitsListQuery = useStaticQuery(query)\n  const commercialToolkits = oc(data).commercialToolkits.edges([])\n\n  return (\n    <Root>\n      {commercialToolkits.map(({ node }) => {\n        if (!node) return null\n        return <Stack key={node.id} stack={node} />\n      })}\n    </Root>\n  )\n}\n\nexport default CommercialToolkitsList\n\nexport const query = graphql`\n  query CommercialToolkitsList {\n    commercialToolkits: allStacksYaml(filter: {type: {eq: \"commercialToolkit\"}}) {\n      edges {\n        node {\n          id\n          ...Stack_Stack\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { oc } from 'ts-optchain'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { PreviousExperienceInListQuery } from '../generated/graphql'\nimport Stack from './Stack'\n\nconst Root = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\n\nconst PreviousExperienceInList: React.SFC = () => {\n  const data: PreviousExperienceInListQuery = useStaticQuery(query)\n  const preExperiences = oc(data).preExperiences.edges([])\n\n  return (\n    <Root>\n      {preExperiences.map(({ node }) => {\n        if (!node) return null\n        return <Stack key={node.id} stack={node} />\n      })}\n    </Root>\n  )\n}\n\nexport default PreviousExperienceInList\n\nexport const query = graphql`\n  query PreviousExperienceInList {\n    preExperiences: allStacksYaml(filter: {type: {eq: \"previousExperienceIn\"}}) {\n      edges {\n        node {\n          id\n          ...Stack_Stack\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { DateTime } from 'luxon'\nimport { Flex } from '@primer/components'\n\nconst HorizontalDivider = styled.div`\n  height: 1px;\n  background-color: #eaecef;\n`\n\ntype DateDividerProps = {\n  date: DateTime\n}\n\nconst DateDivider: React.SFC<DateDividerProps> = (props) => {\n  const { date } = props\n  console.log(date)\n  return (\n    <Flex flexWrap=\"nowrap\" alignItems=\"center\">\n      <Flex.Item>\n        <h3 className=\"h6 pr-2 py-1\">\n          {date.toFormat('LLLL')} <span className=\"text-gray\">{date.year}</span>\n        </h3>\n      </Flex.Item>\n      <Flex.Item flex={1}>\n        <HorizontalDivider />\n      </Flex.Item>\n    </Flex>\n  )\n}\n\nexport default DateDivider\n","import React from 'react'\nimport _ from 'lodash'\nimport styled from 'styled-components'\nimport { StyledOcticon } from '@primer/components'\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\nconst Circle = styled.div`\n  height: 32px;\n  width: 32px;\n  border-radius: 50%;\n  border: 2px solid #fff;\n  background-color: #e6ebf1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\nconst Divider = styled.div`\n  background-color: #eaecef;\n  width: 2px;\n`\nconst TopDivider = styled(Divider)`\n  height: 13px;\n`\nconst BottomDivider = styled(Divider)`\n  flex: 1;\n`\n\n\ntype VerticalDivider = {\n  icon: any;\n}\n\nconst VerticalDivider: React.SFC<VerticalDivider> = (props) => {\n  const { icon } = props\n  return (\n    <Root>\n      <TopDivider />\n      <Circle>\n        <StyledOcticon size={16} icon={icon} color=\"#586069\" />\n      </Circle>\n      <BottomDivider />\n    </Root>\n  )\n}\n\nexport default VerticalDivider\n","import React from 'react'\nimport _ from 'lodash'\nimport { DateTime } from 'luxon'\nimport { oc } from 'ts-optchain'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { Organization, Location, Mail, Link } from '@githubprimer/octicons-react'\nimport { TimelineQuery } from '../../generated/graphql'\nimport DateDivider from './DateDivider'\nimport VerticalDivider from './VerticalDivider'\n\nconst Root = styled.div`\n  /* display: flex;\n  flex-wrap: wrap; */\n`\nconst ExperienceListItem = styled.div`\n  display: flex;\n`\n\nconst Timeline: React.SFC = () => {\n  const data: TimelineQuery = useStaticQuery(query)\n  const experiences = oc(data).experiences.edges([]).map(({ node }) => node)\n\n  const groupByTimes = _.groupBy(experiences, node => {\n    if (!node) return null\n    return DateTime.fromISO(node.startedAt).toFormat('LLLL yyyy')\n  });\n\n  return (\n    <Root>\n      {\n        _.map(groupByTimes, (groupByTime, date) => {\n          return (\n            <React.Fragment key={date}>\n              <DateDivider date={DateTime.fromFormat(date, 'LLLL yyyy')} />\n              {groupByTime.map(experience => {\n                return (\n                  <ExperienceListItem key={experience.id}>\n                    <VerticalDivider icon={Organization} />\n                    <div className=\"p-6\">\n                      {experience.title}\n                    </div>\n                  </ExperienceListItem>\n                )\n              })}\n            </React.Fragment>\n          )\n        })\n      }\n    </Root>\n  )\n}\n\nexport default Timeline\n\nexport const query = graphql`\n  query Timeline {\n    experiences: allExperiencesYaml(sort: { order: DESC, fields: [startedAt]  }) {\n      edges {\n        node {\n          id\n          title\n          title_detail\n          category\n          desc\n          location\n          startedAt(formatString: \"YYYY-MM-DD\")\n          url\n          pinned\n          isJoined\n          photo {\n            publicURL\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { oc } from 'ts-optchain'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport { DabbledWithListQuery } from '../generated/graphql'\nimport Stack from './Stack'\n\nconst Root = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\n\nconst DabbledWithList: React.SFC = () => {\n  const data: DabbledWithListQuery = useStaticQuery(query)\n  const dabbledWiths = oc(data).dabbledWiths.edges([])\n\n  return (\n    <Root>\n      {dabbledWiths.map(({ node }) => {\n        if (!node) return null\n        return <Stack key={node.id} stack={node} />\n      })}\n    </Root>\n  )\n}\n\nexport default DabbledWithList\n\nexport const query = graphql`\n  query DabbledWithList {\n    dabbledWiths: allStacksYaml(filter: {type: {eq: \"dabbledWith\"}}) {\n      edges {\n        node {\n          id\n          ...Stack_Stack\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Organization, Location, Mail, Link } from '@githubprimer/octicons-react'\nimport styled from 'styled-components'\nimport { StyledOcticon } from '@primer/components'\nimport { useSpring, config } from 'react-spring'\nimport PinnedExperienceList from '../components/PinnedExperienceList'\nimport CommercialToolkitsList from '../components/CommercialToolkitsList'\nimport PreviousExperienceInList from '../components/PreviousExperienceInList'\nimport Timeline from '../components/Timeline'\nimport DabbledWithList from '../components/DabbledWithList'\n// import { IndexQuery } from '../generated/graphql'\n\ntype PageProps = {\n}\n\nconst Main = styled.div`\n  max-width: 1012px;\n  width: 100%;\n  margin: auto;\n  display: flex;\n`\n// const StyledOcticon = styled(Octicon)`\n//   width: 16px;\n// `\n\n\nconst Index: React.FunctionComponent<PageProps> = ({ data }) => {\n  const pageAnimation = useSpring({\n    config: config.slow,\n    from: { opacity: 0 },\n    to: { opacity: 1 },\n  })\n\n  return (\n    <div>\n      <header className=\"bg-gray-dark text-white p-3 mb-2\">\n        <Main className=\"px-3\">\n          <h1 className=\"h4 f5 text-white text-bold\">\n            Jeong Seong Dae · Web Software Enginner\n          </h1>\n        </Main>\n      </header>\n      <div className=\"container-lg clearfix mt-4\">\n        <div className=\"h-card col-3 float-left pr-3\">\n          <div className=\"py-3\">\n            <h1 className=\"h2 d-block overflow-hidden\">\n              Jeong Seong Dae\n            </h1>\n            <h2 className=\"h3 f3-light text-gray\">\n              Full Stack Developer ・ JavaScript\n            </h2>\n          </div>\n\n          <ul className=\"border-top border-gray-light pt-3 mb-3\">\n            <li className=\"d-flex flex-row flex-items-center flex-justify-start pt-1\">\n              <StyledOcticon size={16} ml={1} mr={2} icon={Organization} />\n              <span>\n                Ediket\n              </span>\n            </li>\n            <li className=\"d-flex flex-row flex-items-center flex-justify-start pt-1\">\n              <StyledOcticon size={16} ml={1} mr={2} icon={Location} />\n              <span>\n                Seoul\n              </span>\n            </li>\n            <li className=\"d-flex flex-row flex-items-center flex-justify-start pt-1\">\n              <StyledOcticon size={16} ml={1} mr={2} icon={Mail} />\n              <a href=\"mailto:asdfg852456@gmail.com\">\n                asdfg852456@gmail.com\n              </a>\n            </li>\n            <li className=\"d-flex flex-row flex-items-center flex-justify-start pt-1\">\n              <StyledOcticon size={16} ml={1} mr={2} icon={Link} />\n              <a rel=\"nofollow me\" href=\"https://github.com/jeongsd\">https://github.com/jeongsd</a>\n            </li>\n          </ul>\n\n          <div className=\"border-top border-gray-light py-3\">\n            <h2 className=\"mb-1 h4\">\n              Commercial Toolkit\n            </h2>\n            <CommercialToolkitsList />\n          </div>\n          <div className=\"border-top border-gray-light py-3\">\n            <h2 className=\"mb-1 h4\">\n              Previous Experience In\n            </h2>\n            <PreviousExperienceInList />\n          </div>\n\n          <div className=\"border-top border-gray-light py-3\">\n            <h2 className=\"mb-1 h4\">\n              Dabbled With\n            </h2>\n            <DabbledWithList />\n          </div>\n        </div>\n        <div className=\"col-9 float-left pl-2\">\n          <nav className=\"UnderlineNav\">\n            <div className=\"UnderlineNav-body\">\n              <a href=\"#\" role=\"tab\" title=\"Item 1\" className=\"UnderlineNav-item selected\">Overview</a>\n              <a href=\"#experiences\" role=\"tab\" title=\"Item 2\" className=\"UnderlineNav-item\">Experiences</a>\n            </div>\n          </nav>\n          <div className=\"mt-4\">\n            <h2 className=\"f4 mb-2 text-normal\">\n              Pinned Experiences\n            </h2>\n            <div>\n              <PinnedExperienceList />\n            </div>\n          </div>\n\n          <div className=\"mt-4\">\n            <h2 className=\"f4 mb-2 text-normal\">\n              Experience activity\n            </h2>\n            <Timeline />\n            {/* <div>\n              <PinnedExperienceList />\n            </div> */}\n          </div>\n\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Index\n"],"sourceRoot":""}